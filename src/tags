!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/denya/Desktop/C projects/Game engine/src/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/p6.1.20240421.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
CREATE_PROJECT_H	create_project.h	/^#define CREATE_PROJECT_H$/;"	d
FIRST_LAST_MAX	termbox2.h	/^                FIRST_LAST_MAX$/;"	e	enum:extract_esc_mouse::__anone821b80e0403
FIRST_M	termbox2.h	/^                FIRST_M = 0,$/;"	e	enum:extract_esc_mouse::__anone821b80e0403
FIRST_SEMICOLON	termbox2.h	/^                FIRST_SEMICOLON,$/;"	e	enum:extract_esc_mouse::__anone821b80e0403
GLOBALS_H	globals.h	/^#define GLOBALS_H$/;"	d
InterruptConf	main menu.c	/^void InterruptConf(struct tb_event interrupt, int center_x, int quarter3_d_y, bool* P_active, bo/;"	f	typeref:typename:void
LAST_SEMICOLON	termbox2.h	/^                LAST_SEMICOLON,$/;"	e	enum:extract_esc_mouse::__anone821b80e0403
LOAD_PROJECT_MENU_H	load_project_menu.h	/^#define LOAD_PROJECT_MENU_H$/;"	d
TB_256_BLACK	termbox2.h	/^#define TB_256_BLACK TB_HI_BLACK \/\/ `TB_256_BLACK`/;"	d
TB_BLACK	termbox2.h	/^#define TB_BLACK /;"	d
TB_BLINK	termbox2.h	/^#define TB_BLINK /;"	d
TB_BLUE	termbox2.h	/^#define TB_BLUE /;"	d
TB_BOLD	termbox2.h	/^#define TB_BOLD /;"	d
TB_BRIGHT	termbox2.h	/^#define TB_BRIGHT /;"	d
TB_CAP_ARROW_DOWN	termbox2.h	/^#define TB_CAP_ARROW_DOWN /;"	d
TB_CAP_ARROW_LEFT	termbox2.h	/^#define TB_CAP_ARROW_LEFT /;"	d
TB_CAP_ARROW_RIGHT	termbox2.h	/^#define TB_CAP_ARROW_RIGHT /;"	d
TB_CAP_ARROW_UP	termbox2.h	/^#define TB_CAP_ARROW_UP /;"	d
TB_CAP_BACK_TAB	termbox2.h	/^#define TB_CAP_BACK_TAB /;"	d
TB_CAP_BLINK	termbox2.h	/^#define TB_CAP_BLINK /;"	d
TB_CAP_BOLD	termbox2.h	/^#define TB_CAP_BOLD /;"	d
TB_CAP_CLEAR_SCREEN	termbox2.h	/^#define TB_CAP_CLEAR_SCREEN /;"	d
TB_CAP_DELETE	termbox2.h	/^#define TB_CAP_DELETE /;"	d
TB_CAP_DIM	termbox2.h	/^#define TB_CAP_DIM /;"	d
TB_CAP_END	termbox2.h	/^#define TB_CAP_END /;"	d
TB_CAP_ENTER_CA	termbox2.h	/^#define TB_CAP_ENTER_CA /;"	d
TB_CAP_ENTER_KEYPAD	termbox2.h	/^#define TB_CAP_ENTER_KEYPAD /;"	d
TB_CAP_EXIT_CA	termbox2.h	/^#define TB_CAP_EXIT_CA /;"	d
TB_CAP_EXIT_KEYPAD	termbox2.h	/^#define TB_CAP_EXIT_KEYPAD /;"	d
TB_CAP_F1	termbox2.h	/^#define TB_CAP_F1 /;"	d
TB_CAP_F10	termbox2.h	/^#define TB_CAP_F10 /;"	d
TB_CAP_F11	termbox2.h	/^#define TB_CAP_F11 /;"	d
TB_CAP_F12	termbox2.h	/^#define TB_CAP_F12 /;"	d
TB_CAP_F2	termbox2.h	/^#define TB_CAP_F2 /;"	d
TB_CAP_F3	termbox2.h	/^#define TB_CAP_F3 /;"	d
TB_CAP_F4	termbox2.h	/^#define TB_CAP_F4 /;"	d
TB_CAP_F5	termbox2.h	/^#define TB_CAP_F5 /;"	d
TB_CAP_F6	termbox2.h	/^#define TB_CAP_F6 /;"	d
TB_CAP_F7	termbox2.h	/^#define TB_CAP_F7 /;"	d
TB_CAP_F8	termbox2.h	/^#define TB_CAP_F8 /;"	d
TB_CAP_F9	termbox2.h	/^#define TB_CAP_F9 /;"	d
TB_CAP_HIDE_CURSOR	termbox2.h	/^#define TB_CAP_HIDE_CURSOR /;"	d
TB_CAP_HOME	termbox2.h	/^#define TB_CAP_HOME /;"	d
TB_CAP_INSERT	termbox2.h	/^#define TB_CAP_INSERT /;"	d
TB_CAP_INVISIBLE	termbox2.h	/^#define TB_CAP_INVISIBLE /;"	d
TB_CAP_ITALIC	termbox2.h	/^#define TB_CAP_ITALIC /;"	d
TB_CAP_PGDN	termbox2.h	/^#define TB_CAP_PGDN /;"	d
TB_CAP_PGUP	termbox2.h	/^#define TB_CAP_PGUP /;"	d
TB_CAP_REVERSE	termbox2.h	/^#define TB_CAP_REVERSE /;"	d
TB_CAP_SGR0	termbox2.h	/^#define TB_CAP_SGR0 /;"	d
TB_CAP_SHOW_CURSOR	termbox2.h	/^#define TB_CAP_SHOW_CURSOR /;"	d
TB_CAP_UNDERLINE	termbox2.h	/^#define TB_CAP_UNDERLINE /;"	d
TB_CAP__COUNT	termbox2.h	/^#define TB_CAP__COUNT /;"	d
TB_CAP__COUNT_KEYS	termbox2.h	/^#define TB_CAP__COUNT_KEYS /;"	d
TB_CYAN	termbox2.h	/^#define TB_CYAN /;"	d
TB_DEFAULT	termbox2.h	/^#define TB_DEFAULT /;"	d
TB_DIM	termbox2.h	/^#define TB_DIM /;"	d
TB_ERR	termbox2.h	/^#define TB_ERR /;"	d
TB_ERR_CAP_COLLISION	termbox2.h	/^#define TB_ERR_CAP_COLLISION /;"	d
TB_ERR_INIT_ALREADY	termbox2.h	/^#define TB_ERR_INIT_ALREADY /;"	d
TB_ERR_INIT_OPEN	termbox2.h	/^#define TB_ERR_INIT_OPEN /;"	d
TB_ERR_MEM	termbox2.h	/^#define TB_ERR_MEM /;"	d
TB_ERR_NEED_MORE	termbox2.h	/^#define TB_ERR_NEED_MORE /;"	d
TB_ERR_NOT_INIT	termbox2.h	/^#define TB_ERR_NOT_INIT /;"	d
TB_ERR_NO_EVENT	termbox2.h	/^#define TB_ERR_NO_EVENT /;"	d
TB_ERR_NO_TERM	termbox2.h	/^#define TB_ERR_NO_TERM /;"	d
TB_ERR_OUT_OF_BOUNDS	termbox2.h	/^#define TB_ERR_OUT_OF_BOUNDS /;"	d
TB_ERR_POLL	termbox2.h	/^#define TB_ERR_POLL /;"	d
TB_ERR_READ	termbox2.h	/^#define TB_ERR_READ /;"	d
TB_ERR_RESIZE_IOCTL	termbox2.h	/^#define TB_ERR_RESIZE_IOCTL /;"	d
TB_ERR_RESIZE_PIPE	termbox2.h	/^#define TB_ERR_RESIZE_PIPE /;"	d
TB_ERR_RESIZE_POLL	termbox2.h	/^#define TB_ERR_RESIZE_POLL /;"	d
TB_ERR_RESIZE_READ	termbox2.h	/^#define TB_ERR_RESIZE_READ /;"	d
TB_ERR_RESIZE_SELECT	termbox2.h	/^#define TB_ERR_RESIZE_SELECT /;"	d
TB_ERR_RESIZE_SIGACTION	termbox2.h	/^#define TB_ERR_RESIZE_SIGACTION /;"	d
TB_ERR_RESIZE_SSCANF	termbox2.h	/^#define TB_ERR_RESIZE_SSCANF /;"	d
TB_ERR_RESIZE_WRITE	termbox2.h	/^#define TB_ERR_RESIZE_WRITE /;"	d
TB_ERR_SELECT	termbox2.h	/^#define TB_ERR_SELECT /;"	d
TB_ERR_TCGETATTR	termbox2.h	/^#define TB_ERR_TCGETATTR /;"	d
TB_ERR_TCSETATTR	termbox2.h	/^#define TB_ERR_TCSETATTR /;"	d
TB_ERR_UNSUPPORTED_TERM	termbox2.h	/^#define TB_ERR_UNSUPPORTED_TERM /;"	d
TB_EVENT_KEY	termbox2.h	/^#define TB_EVENT_KEY /;"	d
TB_EVENT_MOUSE	termbox2.h	/^#define TB_EVENT_MOUSE /;"	d
TB_EVENT_RESIZE	termbox2.h	/^#define TB_EVENT_RESIZE /;"	d
TB_FUNC_EXTRACT_POST	termbox2.h	/^#define TB_FUNC_EXTRACT_POST /;"	d
TB_FUNC_EXTRACT_PRE	termbox2.h	/^#define TB_FUNC_EXTRACT_PRE /;"	d
TB_GREEN	termbox2.h	/^#define TB_GREEN /;"	d
TB_HARDCAP_ENTER_MOUSE	termbox2.h	/^#define TB_HARDCAP_ENTER_MOUSE /;"	d
TB_HARDCAP_EXIT_MOUSE	termbox2.h	/^#define TB_HARDCAP_EXIT_MOUSE /;"	d
TB_HARDCAP_OVERLINE	termbox2.h	/^#define TB_HARDCAP_OVERLINE /;"	d
TB_HARDCAP_STRIKEOUT	termbox2.h	/^#define TB_HARDCAP_STRIKEOUT /;"	d
TB_HARDCAP_UNDERLINE_2	termbox2.h	/^#define TB_HARDCAP_UNDERLINE_2 /;"	d
TB_HI_BLACK	termbox2.h	/^#define TB_HI_BLACK /;"	d
TB_IMPL	main menu.c	/^#define TB_IMPL$/;"	d	file:
TB_INPUT_ALT	termbox2.h	/^#define TB_INPUT_ALT /;"	d
TB_INPUT_CURRENT	termbox2.h	/^#define TB_INPUT_CURRENT /;"	d
TB_INPUT_ESC	termbox2.h	/^#define TB_INPUT_ESC /;"	d
TB_INPUT_MOUSE	termbox2.h	/^#define TB_INPUT_MOUSE /;"	d
TB_INVISIBLE	termbox2.h	/^#define TB_INVISIBLE /;"	d
TB_ITALIC	termbox2.h	/^#define TB_ITALIC /;"	d
TB_KEY_ARROW_DOWN	termbox2.h	/^#define TB_KEY_ARROW_DOWN /;"	d
TB_KEY_ARROW_LEFT	termbox2.h	/^#define TB_KEY_ARROW_LEFT /;"	d
TB_KEY_ARROW_RIGHT	termbox2.h	/^#define TB_KEY_ARROW_RIGHT /;"	d
TB_KEY_ARROW_UP	termbox2.h	/^#define TB_KEY_ARROW_UP /;"	d
TB_KEY_BACKSPACE	termbox2.h	/^#define TB_KEY_BACKSPACE /;"	d
TB_KEY_BACKSPACE2	termbox2.h	/^#define TB_KEY_BACKSPACE2 /;"	d
TB_KEY_BACK_TAB	termbox2.h	/^#define TB_KEY_BACK_TAB /;"	d
TB_KEY_CTRL_2	termbox2.h	/^#define TB_KEY_CTRL_2 /;"	d
TB_KEY_CTRL_3	termbox2.h	/^#define TB_KEY_CTRL_3 /;"	d
TB_KEY_CTRL_4	termbox2.h	/^#define TB_KEY_CTRL_4 /;"	d
TB_KEY_CTRL_5	termbox2.h	/^#define TB_KEY_CTRL_5 /;"	d
TB_KEY_CTRL_6	termbox2.h	/^#define TB_KEY_CTRL_6 /;"	d
TB_KEY_CTRL_7	termbox2.h	/^#define TB_KEY_CTRL_7 /;"	d
TB_KEY_CTRL_8	termbox2.h	/^#define TB_KEY_CTRL_8 /;"	d
TB_KEY_CTRL_A	termbox2.h	/^#define TB_KEY_CTRL_A /;"	d
TB_KEY_CTRL_B	termbox2.h	/^#define TB_KEY_CTRL_B /;"	d
TB_KEY_CTRL_BACKSLASH	termbox2.h	/^#define TB_KEY_CTRL_BACKSLASH /;"	d
TB_KEY_CTRL_C	termbox2.h	/^#define TB_KEY_CTRL_C /;"	d
TB_KEY_CTRL_D	termbox2.h	/^#define TB_KEY_CTRL_D /;"	d
TB_KEY_CTRL_E	termbox2.h	/^#define TB_KEY_CTRL_E /;"	d
TB_KEY_CTRL_F	termbox2.h	/^#define TB_KEY_CTRL_F /;"	d
TB_KEY_CTRL_G	termbox2.h	/^#define TB_KEY_CTRL_G /;"	d
TB_KEY_CTRL_H	termbox2.h	/^#define TB_KEY_CTRL_H /;"	d
TB_KEY_CTRL_I	termbox2.h	/^#define TB_KEY_CTRL_I /;"	d
TB_KEY_CTRL_J	termbox2.h	/^#define TB_KEY_CTRL_J /;"	d
TB_KEY_CTRL_K	termbox2.h	/^#define TB_KEY_CTRL_K /;"	d
TB_KEY_CTRL_L	termbox2.h	/^#define TB_KEY_CTRL_L /;"	d
TB_KEY_CTRL_LSQ_BRACKET	termbox2.h	/^#define TB_KEY_CTRL_LSQ_BRACKET /;"	d
TB_KEY_CTRL_M	termbox2.h	/^#define TB_KEY_CTRL_M /;"	d
TB_KEY_CTRL_N	termbox2.h	/^#define TB_KEY_CTRL_N /;"	d
TB_KEY_CTRL_O	termbox2.h	/^#define TB_KEY_CTRL_O /;"	d
TB_KEY_CTRL_P	termbox2.h	/^#define TB_KEY_CTRL_P /;"	d
TB_KEY_CTRL_Q	termbox2.h	/^#define TB_KEY_CTRL_Q /;"	d
TB_KEY_CTRL_R	termbox2.h	/^#define TB_KEY_CTRL_R /;"	d
TB_KEY_CTRL_RSQ_BRACKET	termbox2.h	/^#define TB_KEY_CTRL_RSQ_BRACKET /;"	d
TB_KEY_CTRL_S	termbox2.h	/^#define TB_KEY_CTRL_S /;"	d
TB_KEY_CTRL_SLASH	termbox2.h	/^#define TB_KEY_CTRL_SLASH /;"	d
TB_KEY_CTRL_T	termbox2.h	/^#define TB_KEY_CTRL_T /;"	d
TB_KEY_CTRL_TILDE	termbox2.h	/^#define TB_KEY_CTRL_TILDE /;"	d
TB_KEY_CTRL_U	termbox2.h	/^#define TB_KEY_CTRL_U /;"	d
TB_KEY_CTRL_UNDERSCORE	termbox2.h	/^#define TB_KEY_CTRL_UNDERSCORE /;"	d
TB_KEY_CTRL_V	termbox2.h	/^#define TB_KEY_CTRL_V /;"	d
TB_KEY_CTRL_W	termbox2.h	/^#define TB_KEY_CTRL_W /;"	d
TB_KEY_CTRL_X	termbox2.h	/^#define TB_KEY_CTRL_X /;"	d
TB_KEY_CTRL_Y	termbox2.h	/^#define TB_KEY_CTRL_Y /;"	d
TB_KEY_CTRL_Z	termbox2.h	/^#define TB_KEY_CTRL_Z /;"	d
TB_KEY_DELETE	termbox2.h	/^#define TB_KEY_DELETE /;"	d
TB_KEY_END	termbox2.h	/^#define TB_KEY_END /;"	d
TB_KEY_ENTER	termbox2.h	/^#define TB_KEY_ENTER /;"	d
TB_KEY_ESC	termbox2.h	/^#define TB_KEY_ESC /;"	d
TB_KEY_F1	termbox2.h	/^#define TB_KEY_F1 /;"	d
TB_KEY_F10	termbox2.h	/^#define TB_KEY_F10 /;"	d
TB_KEY_F11	termbox2.h	/^#define TB_KEY_F11 /;"	d
TB_KEY_F12	termbox2.h	/^#define TB_KEY_F12 /;"	d
TB_KEY_F2	termbox2.h	/^#define TB_KEY_F2 /;"	d
TB_KEY_F3	termbox2.h	/^#define TB_KEY_F3 /;"	d
TB_KEY_F4	termbox2.h	/^#define TB_KEY_F4 /;"	d
TB_KEY_F5	termbox2.h	/^#define TB_KEY_F5 /;"	d
TB_KEY_F6	termbox2.h	/^#define TB_KEY_F6 /;"	d
TB_KEY_F7	termbox2.h	/^#define TB_KEY_F7 /;"	d
TB_KEY_F8	termbox2.h	/^#define TB_KEY_F8 /;"	d
TB_KEY_F9	termbox2.h	/^#define TB_KEY_F9 /;"	d
TB_KEY_HOME	termbox2.h	/^#define TB_KEY_HOME /;"	d
TB_KEY_INSERT	termbox2.h	/^#define TB_KEY_INSERT /;"	d
TB_KEY_MOUSE_LEFT	termbox2.h	/^#define TB_KEY_MOUSE_LEFT /;"	d
TB_KEY_MOUSE_MIDDLE	termbox2.h	/^#define TB_KEY_MOUSE_MIDDLE /;"	d
TB_KEY_MOUSE_RELEASE	termbox2.h	/^#define TB_KEY_MOUSE_RELEASE /;"	d
TB_KEY_MOUSE_RIGHT	termbox2.h	/^#define TB_KEY_MOUSE_RIGHT /;"	d
TB_KEY_MOUSE_WHEEL_DOWN	termbox2.h	/^#define TB_KEY_MOUSE_WHEEL_DOWN /;"	d
TB_KEY_MOUSE_WHEEL_UP	termbox2.h	/^#define TB_KEY_MOUSE_WHEEL_UP /;"	d
TB_KEY_PGDN	termbox2.h	/^#define TB_KEY_PGDN /;"	d
TB_KEY_PGUP	termbox2.h	/^#define TB_KEY_PGUP /;"	d
TB_KEY_SPACE	termbox2.h	/^#define TB_KEY_SPACE /;"	d
TB_KEY_TAB	termbox2.h	/^#define TB_KEY_TAB /;"	d
TB_MAGENTA	termbox2.h	/^#define TB_MAGENTA /;"	d
TB_MOD_ALT	termbox2.h	/^#define TB_MOD_ALT /;"	d
TB_MOD_CTRL	termbox2.h	/^#define TB_MOD_CTRL /;"	d
TB_MOD_MOTION	termbox2.h	/^#define TB_MOD_MOTION /;"	d
TB_MOD_SHIFT	termbox2.h	/^#define TB_MOD_SHIFT /;"	d
TB_OK	termbox2.h	/^#define TB_OK /;"	d
TB_OPT_ATTR_W	termbox2.h	/^#define TB_OPT_ATTR_W /;"	d
TB_OPT_EGC	termbox2.h	/^#define TB_OPT_EGC$/;"	d
TB_OPT_PRINTF_BUF	termbox2.h	/^#define TB_OPT_PRINTF_BUF /;"	d
TB_OPT_READ_BUF	termbox2.h	/^#define TB_OPT_READ_BUF /;"	d
TB_OUTPUT_216	termbox2.h	/^#define TB_OUTPUT_216 /;"	d
TB_OUTPUT_256	termbox2.h	/^#define TB_OUTPUT_256 /;"	d
TB_OUTPUT_CURRENT	termbox2.h	/^#define TB_OUTPUT_CURRENT /;"	d
TB_OUTPUT_GRAYSCALE	termbox2.h	/^#define TB_OUTPUT_GRAYSCALE /;"	d
TB_OUTPUT_NORMAL	termbox2.h	/^#define TB_OUTPUT_NORMAL /;"	d
TB_OUTPUT_TRUECOLOR	termbox2.h	/^#define TB_OUTPUT_TRUECOLOR /;"	d
TB_OVERLINE	termbox2.h	/^#define TB_OVERLINE /;"	d
TB_PATH_MAX	termbox2.h	/^#define TB_PATH_MAX /;"	d
TB_RED	termbox2.h	/^#define TB_RED /;"	d
TB_RESIZE_FALLBACK_MS	termbox2.h	/^#define TB_RESIZE_FALLBACK_MS /;"	d
TB_REVERSE	termbox2.h	/^#define TB_REVERSE /;"	d
TB_STRIKEOUT	termbox2.h	/^#define TB_STRIKEOUT /;"	d
TB_UNDERLINE	termbox2.h	/^#define TB_UNDERLINE /;"	d
TB_UNDERLINE_2	termbox2.h	/^#define TB_UNDERLINE_2 /;"	d
TB_VERSION_STR	termbox2.h	/^#define TB_VERSION_STR /;"	d
TB_WHITE	termbox2.h	/^#define TB_WHITE /;"	d
TB_YELLOW	termbox2.h	/^#define TB_YELLOW /;"	d
TERMBOX_H_INCL	termbox2.h	/^#define TERMBOX_H_INCL$/;"	d
TYPE_1006	termbox2.h	/^    enum { TYPE_VT200 = 0, TYPE_1006, TYPE_1015, TYPE_MAX };$/;"	e	enum:extract_esc_mouse::__anone821b80e0303
TYPE_1015	termbox2.h	/^    enum { TYPE_VT200 = 0, TYPE_1006, TYPE_1015, TYPE_MAX };$/;"	e	enum:extract_esc_mouse::__anone821b80e0303
TYPE_MAX	termbox2.h	/^    enum { TYPE_VT200 = 0, TYPE_1006, TYPE_1015, TYPE_MAX };$/;"	e	enum:extract_esc_mouse::__anone821b80e0303
TYPE_VT200	termbox2.h	/^    enum { TYPE_VT200 = 0, TYPE_1006, TYPE_1015, TYPE_MAX };$/;"	e	enum:extract_esc_mouse::__anone821b80e0303
_DEFAULT_SOURCE	termbox2.h	/^#define _DEFAULT_SOURCE$/;"	d
_XOPEN_SOURCE	termbox2.h	/^#define _XOPEN_SOURCE$/;"	d
__anone821b80e0108	termbox2.h	/^static struct {$/;"	s
__anone821b80e0208	termbox2.h	/^static struct {$/;"	s
__anone821b80e0303	termbox2.h	/^    enum { TYPE_VT200 = 0, TYPE_1006, TYPE_1015, TYPE_MAX };$/;"	g	function:extract_esc_mouse
__anone821b80e0403	termbox2.h	/^            enum {$/;"	g	function:extract_esc_mouse
alias	termbox2.h	/^    const char *alias;$/;"	m	struct:__anone821b80e0108	typeref:typename:const char *
back	termbox2.h	/^    struct cellbuf_t back;$/;"	m	struct:tb_global_t	typeref:struct:cellbuf_t
bg	termbox2.h	/^    uintattr_t bg; \/\/ bitwise background attributes$/;"	m	struct:tb_cell	typeref:typename:uintattr_t
bg	termbox2.h	/^    uintattr_t bg;$/;"	m	struct:tb_global_t	typeref:typename:uintattr_t
buf	termbox2.h	/^    char *buf;$/;"	m	struct:bytebuf_t	typeref:typename:char *
builtin_mod_caps	termbox2.h	/^} builtin_mod_caps[] = {$/;"	v	typeref:struct:__anone821b80e0208[]
builtin_terms	termbox2.h	/^} builtin_terms[] = {$/;"	v	typeref:struct:__anone821b80e0108[]
bytebuf_flush	termbox2.h	/^static int bytebuf_flush(struct bytebuf_t *b, int fd) {$/;"	f	typeref:typename:int
bytebuf_free	termbox2.h	/^static int bytebuf_free(struct bytebuf_t *b) {$/;"	f	typeref:typename:int
bytebuf_nputs	termbox2.h	/^static int bytebuf_nputs(struct bytebuf_t *b, const char *str, size_t nstr) {$/;"	f	typeref:typename:int
bytebuf_puts	termbox2.h	/^static int bytebuf_puts(struct bytebuf_t *b, const char *str) {$/;"	f	typeref:typename:int
bytebuf_reserve	termbox2.h	/^static int bytebuf_reserve(struct bytebuf_t *b, size_t sz) {$/;"	f	typeref:typename:int
bytebuf_shift	termbox2.h	/^static int bytebuf_shift(struct bytebuf_t *b, size_t n) {$/;"	f	typeref:typename:int
bytebuf_t	termbox2.h	/^struct bytebuf_t {$/;"	s
c	termbox2.h	/^    char c;$/;"	m	struct:cap_trie_t	typeref:typename:char
cap	termbox2.h	/^    const char *cap;$/;"	m	struct:__anone821b80e0208	typeref:typename:const char *
cap	termbox2.h	/^    size_t cap;$/;"	m	struct:bytebuf_t	typeref:typename:size_t
cap_trie	termbox2.h	/^    struct cap_trie_t cap_trie;$/;"	m	struct:tb_global_t	typeref:struct:cap_trie_t
cap_trie_add	termbox2.h	/^static int cap_trie_add(const char *cap, uint16_t key, uint8_t mod) {$/;"	f	typeref:typename:int
cap_trie_deinit	termbox2.h	/^static int cap_trie_deinit(struct cap_trie_t *node) {$/;"	f	typeref:typename:int
cap_trie_find	termbox2.h	/^static int cap_trie_find(const char *buf, size_t nbuf, struct cap_trie_t **last,$/;"	f	typeref:typename:int
cap_trie_t	termbox2.h	/^struct cap_trie_t {$/;"	s
caps	termbox2.h	/^    const char **caps;$/;"	m	struct:__anone821b80e0108	typeref:typename:const char **
caps	termbox2.h	/^    const char *caps[TB_CAP__COUNT];$/;"	m	struct:tb_global_t	typeref:typename:const char * []
cech	termbox2.h	/^    size_t cech;   \/\/ num elements allocated for ech$/;"	m	struct:tb_cell	typeref:typename:size_t
cell_cmp	termbox2.h	/^static int cell_cmp(struct tb_cell *a, struct tb_cell *b) {$/;"	f	typeref:typename:int
cell_copy	termbox2.h	/^static int cell_copy(struct tb_cell *dst, struct tb_cell *src) {$/;"	f	typeref:typename:int
cell_free	termbox2.h	/^static int cell_free(struct tb_cell *cell) {$/;"	f	typeref:typename:int
cell_reserve_ech	termbox2.h	/^static int cell_reserve_ech(struct tb_cell *cell, size_t n) {$/;"	f	typeref:typename:int
cell_set	termbox2.h	/^static int cell_set(struct tb_cell *cell, uint32_t *ch, size_t nch,$/;"	f	typeref:typename:int
cellbuf_clear	termbox2.h	/^static int cellbuf_clear(struct cellbuf_t *c) {$/;"	f	typeref:typename:int
cellbuf_free	termbox2.h	/^static int cellbuf_free(struct cellbuf_t *c) {$/;"	f	typeref:typename:int
cellbuf_get	termbox2.h	/^static int cellbuf_get(struct cellbuf_t *c, int x, int y,$/;"	f	typeref:typename:int
cellbuf_in_bounds	termbox2.h	/^static int cellbuf_in_bounds(struct cellbuf_t *c, int x, int y) {$/;"	f	typeref:typename:int
cellbuf_init	termbox2.h	/^static int cellbuf_init(struct cellbuf_t *c, int w, int h) {$/;"	f	typeref:typename:int
cellbuf_resize	termbox2.h	/^static int cellbuf_resize(struct cellbuf_t *c, int w, int h) {$/;"	f	typeref:typename:int
cellbuf_t	termbox2.h	/^struct cellbuf_t {$/;"	s
cells	termbox2.h	/^    struct tb_cell *cells;$/;"	m	struct:cellbuf_t	typeref:struct:tb_cell *
ch	termbox2.h	/^    uint32_t ch;   \/\/ a Unicode codepoint$/;"	m	struct:tb_cell	typeref:typename:uint32_t
ch	termbox2.h	/^    uint32_t ch;  \/\/ a Unicode codepoint$/;"	m	struct:tb_event	typeref:typename:uint32_t
children	termbox2.h	/^    struct cap_trie_t *children;$/;"	m	struct:cap_trie_t	typeref:struct:cap_trie_t *
convert_num	termbox2.h	/^static int convert_num(uint32_t num, char *buf) {$/;"	f	typeref:typename:int
create_project	create project.c	/^int create_project(int center_x, int center_y, char* name)$/;"	f	typeref:typename:int
cursor_x	termbox2.h	/^    int cursor_x;$/;"	m	struct:tb_global_t	typeref:typename:int
cursor_y	termbox2.h	/^    int cursor_y;$/;"	m	struct:tb_global_t	typeref:typename:int
ech	termbox2.h	/^    uint32_t *ech; \/\/ a grapheme cluster of Unicode codepoints, 0-terminated$/;"	m	struct:tb_cell	typeref:typename:uint32_t *
errbuf	termbox2.h	/^    char errbuf[1024];$/;"	m	struct:tb_global_t	typeref:typename:char[1024]
eterm_caps	termbox2.h	/^static const char *eterm_caps[] = {$/;"	v	typeref:typename:const char * []
extract_esc	termbox2.h	/^static int extract_esc(struct tb_event *event) {$/;"	f	typeref:typename:int
extract_esc_cap	termbox2.h	/^static int extract_esc_cap(struct tb_event *event) {$/;"	f	typeref:typename:int
extract_esc_mouse	termbox2.h	/^static int extract_esc_mouse(struct tb_event *event) {$/;"	f	typeref:typename:int
extract_esc_user	termbox2.h	/^static int extract_esc_user(struct tb_event *event, int is_post) {$/;"	f	typeref:typename:int
extract_event	termbox2.h	/^static int extract_event(struct tb_event *event) {$/;"	f	typeref:typename:int
fg	termbox2.h	/^    uintattr_t fg; \/\/ bitwise foreground attributes$/;"	m	struct:tb_cell	typeref:typename:uintattr_t
fg	termbox2.h	/^    uintattr_t fg;$/;"	m	struct:tb_global_t	typeref:typename:uintattr_t
fn_extract_esc_post	termbox2.h	/^    int (*fn_extract_esc_post)(struct tb_event *, size_t *);$/;"	m	struct:tb_global_t	typeref:typename:int (*)(struct tb_event *,size_t *)
fn_extract_esc_pre	termbox2.h	/^    int (*fn_extract_esc_pre)(struct tb_event *, size_t *);$/;"	m	struct:tb_global_t	typeref:typename:int (*)(struct tb_event *,size_t *)
front	termbox2.h	/^    struct cellbuf_t front;$/;"	m	struct:tb_global_t	typeref:struct:cellbuf_t
get_terminfo_string	termbox2.h	/^static const char *get_terminfo_string(int16_t str_offsets_pos,$/;"	f	typeref:typename:const char *
global	termbox2.h	/^static struct tb_global_t global = {0};$/;"	v	typeref:struct:tb_global_t
h	termbox2.h	/^    int32_t h;    \/\/ resize height$/;"	m	struct:tb_event	typeref:typename:int32_t
handle_resize	termbox2.h	/^static void handle_resize(int sig) {$/;"	f	typeref:typename:void
has_orig_tios	termbox2.h	/^    int has_orig_tios;$/;"	m	struct:tb_global_t	typeref:typename:int
height	termbox2.h	/^    int height;$/;"	m	struct:cellbuf_t	typeref:typename:int
height	termbox2.h	/^    int height;$/;"	m	struct:tb_global_t	typeref:typename:int
if_err_break	termbox2.h	/^#define if_err_break(/;"	d
if_err_return	termbox2.h	/^#define if_err_return(/;"	d
if_not_init_return	termbox2.h	/^#define if_not_init_return(/;"	d
if_ok_or_need_more_return	termbox2.h	/^#define if_ok_or_need_more_return(/;"	d
if_ok_return	termbox2.h	/^#define if_ok_return(/;"	d
in	termbox2.h	/^    struct bytebuf_t in;$/;"	m	struct:tb_global_t	typeref:struct:bytebuf_t
init_cap_trie	termbox2.h	/^static int init_cap_trie(void) {$/;"	f	typeref:typename:int
init_cellbuf	termbox2.h	/^static int init_cellbuf(void) {$/;"	f	typeref:typename:int
init_resize_handler	termbox2.h	/^static int init_resize_handler(void) {$/;"	f	typeref:typename:int
init_term_attrs	termbox2.h	/^static int init_term_attrs(void) {$/;"	f	typeref:typename:int
init_term_caps	termbox2.h	/^static int init_term_caps(void) {$/;"	f	typeref:typename:int
initialise_files	load_project_menu.c	/^int initialise_files(int* P_num_of_pfiles, char **filenames, int option)$/;"	f	typeref:typename:int
initialized	termbox2.h	/^    int initialized;$/;"	m	struct:tb_global_t	typeref:typename:int
input_mode	termbox2.h	/^    int input_mode;$/;"	m	struct:tb_global_t	typeref:typename:int
is_leaf	termbox2.h	/^    int is_leaf;$/;"	m	struct:cap_trie_t	typeref:typename:int
key	termbox2.h	/^    const uint16_t key;$/;"	m	struct:__anone821b80e0208	typeref:typename:const uint16_t
key	termbox2.h	/^    uint16_t key; \/\/ one of `TB_KEY_*` constants$/;"	m	struct:tb_event	typeref:typename:uint16_t
key	termbox2.h	/^    uint16_t key;$/;"	m	struct:cap_trie_t	typeref:typename:uint16_t
last_bg	termbox2.h	/^    uintattr_t last_bg;$/;"	m	struct:tb_global_t	typeref:typename:uintattr_t
last_errno	termbox2.h	/^    int last_errno;$/;"	m	struct:tb_global_t	typeref:typename:int
last_fg	termbox2.h	/^    uintattr_t last_fg;$/;"	m	struct:tb_global_t	typeref:typename:uintattr_t
last_x	termbox2.h	/^    int last_x;$/;"	m	struct:tb_global_t	typeref:typename:int
last_y	termbox2.h	/^    int last_y;$/;"	m	struct:tb_global_t	typeref:typename:int
len	termbox2.h	/^    size_t len;$/;"	m	struct:bytebuf_t	typeref:typename:size_t
linux_caps	termbox2.h	/^static const char *linux_caps[] = {$/;"	v	typeref:typename:const char * []
load_builtin_caps	termbox2.h	/^static int load_builtin_caps(void) {$/;"	f	typeref:typename:int
load_terminfo	termbox2.h	/^static int load_terminfo(void) {$/;"	f	typeref:typename:int
load_terminfo_from_path	termbox2.h	/^static int load_terminfo_from_path(const char *path, const char *term) {$/;"	f	typeref:typename:int
main	main menu.c	/^int main() $/;"	f	typeref:typename:int
mod	termbox2.h	/^    const uint8_t mod;$/;"	m	struct:__anone821b80e0208	typeref:typename:const uint8_t
mod	termbox2.h	/^    uint8_t mod;  \/\/ bitwise `TB_MOD_*` constants$/;"	m	struct:tb_event	typeref:typename:uint8_t
mod	termbox2.h	/^    uint8_t mod;$/;"	m	struct:cap_trie_t	typeref:typename:uint8_t
name	termbox2.h	/^    const char *name;$/;"	m	struct:__anone821b80e0108	typeref:typename:const char *
nchildren	termbox2.h	/^    size_t nchildren;$/;"	m	struct:cap_trie_t	typeref:typename:size_t
nech	termbox2.h	/^    size_t nech;   \/\/ num elements in ech, 0 means use ch instead of ech$/;"	m	struct:tb_cell	typeref:typename:size_t
nterminfo	termbox2.h	/^    size_t nterminfo;$/;"	m	struct:tb_global_t	typeref:typename:size_t
orig_tios	termbox2.h	/^    struct termios orig_tios;$/;"	m	struct:tb_global_t	typeref:struct:termios
out	termbox2.h	/^    struct bytebuf_t out;$/;"	m	struct:tb_global_t	typeref:struct:bytebuf_t
output_mode	termbox2.h	/^    int output_mode;$/;"	m	struct:tb_global_t	typeref:typename:int
parse_terminfo_caps	termbox2.h	/^static int parse_terminfo_caps(void) {$/;"	f	typeref:typename:int
read_terminfo_path	termbox2.h	/^static int read_terminfo_path(const char *path) {$/;"	f	typeref:typename:int
resize_cellbufs	termbox2.h	/^static int resize_cellbufs(void) {$/;"	f	typeref:typename:int
resize_pipefd	termbox2.h	/^    int resize_pipefd[2];$/;"	m	struct:tb_global_t	typeref:typename:int[2]
rfd	termbox2.h	/^    int rfd;$/;"	m	struct:tb_global_t	typeref:typename:int
rxvt_256color_caps	termbox2.h	/^static const char *rxvt_256color_caps[] = {$/;"	v	typeref:typename:const char * []
rxvt_unicode_caps	termbox2.h	/^static const char *rxvt_unicode_caps[] = {$/;"	v	typeref:typename:const char * []
screen_caps	termbox2.h	/^static const char *screen_caps[] = {$/;"	v	typeref:typename:const char * []
send_attr	termbox2.h	/^static int send_attr(uintattr_t fg, uintattr_t bg) {$/;"	f	typeref:typename:int
send_char	termbox2.h	/^static int send_char(int x, int y, uint32_t ch) {$/;"	f	typeref:typename:int
send_clear	termbox2.h	/^static int send_clear(void) {$/;"	f	typeref:typename:int
send_cluster	termbox2.h	/^static int send_cluster(int x, int y, uint32_t *ch, size_t nch) {$/;"	f	typeref:typename:int
send_cursor_if	termbox2.h	/^static int send_cursor_if(int x, int y) {$/;"	f	typeref:typename:int
send_init_escape_codes	termbox2.h	/^static int send_init_escape_codes(void) {$/;"	f	typeref:typename:int
send_literal	termbox2.h	/^#define send_literal(/;"	d
send_num	termbox2.h	/^#define send_num(/;"	d
send_sgr	termbox2.h	/^static int send_sgr(uint32_t cfg, uint32_t cbg, int fg_is_default,$/;"	f	typeref:typename:int
snprintf_or_return	termbox2.h	/^#define snprintf_or_return(/;"	d
tb_attr_width	termbox2.h	/^int tb_attr_width(void) {$/;"	f	typeref:typename:int
tb_cell	termbox2.h	/^struct tb_cell {$/;"	s
tb_cell_buffer	termbox2.h	/^struct tb_cell *tb_cell_buffer(void) {$/;"	f	typeref:struct:tb_cell *
tb_change_cell	termbox2.h	/^#define tb_change_cell /;"	d
tb_clear	termbox2.h	/^int tb_clear(void) {$/;"	f	typeref:typename:int
tb_deinit	termbox2.h	/^static int tb_deinit(void) {$/;"	f	typeref:typename:int
tb_event	termbox2.h	/^struct tb_event {$/;"	s
tb_extend_cell	termbox2.h	/^int tb_extend_cell(int x, int y, uint32_t ch) {$/;"	f	typeref:typename:int
tb_free	termbox2.h	/^#define tb_free /;"	d
tb_get_fds	termbox2.h	/^int tb_get_fds(int *ttyfd, int *resizefd) {$/;"	f	typeref:typename:int
tb_global_t	termbox2.h	/^struct tb_global_t {$/;"	s
tb_has_egc	termbox2.h	/^int tb_has_egc(void) {$/;"	f	typeref:typename:int
tb_has_truecolor	termbox2.h	/^int tb_has_truecolor(void) {$/;"	f	typeref:typename:int
tb_height	termbox2.h	/^int tb_height(void) {$/;"	f	typeref:typename:int
tb_hide_cursor	termbox2.h	/^int tb_hide_cursor(void) {$/;"	f	typeref:typename:int
tb_init	termbox2.h	/^int tb_init(void) {$/;"	f	typeref:typename:int
tb_init_fd	termbox2.h	/^int tb_init_fd(int ttyfd) {$/;"	f	typeref:typename:int
tb_init_file	termbox2.h	/^int tb_init_file(const char *path) {$/;"	f	typeref:typename:int
tb_init_rwfd	termbox2.h	/^int tb_init_rwfd(int rfd, int wfd) {$/;"	f	typeref:typename:int
tb_invalidate	termbox2.h	/^int tb_invalidate(void) {$/;"	f	typeref:typename:int
tb_key_i	termbox2.h	/^#define tb_key_i(/;"	d
tb_last_errno	termbox2.h	/^int tb_last_errno(void) {$/;"	f	typeref:typename:int
tb_malloc	termbox2.h	/^#define tb_malloc /;"	d
tb_peek_event	termbox2.h	/^int tb_peek_event(struct tb_event *event, int timeout_ms) {$/;"	f	typeref:typename:int
tb_poll_event	termbox2.h	/^int tb_poll_event(struct tb_event *event) {$/;"	f	typeref:typename:int
tb_present	termbox2.h	/^int tb_present(void) {$/;"	f	typeref:typename:int
tb_print	termbox2.h	/^int tb_print(int x, int y, uintattr_t fg, uintattr_t bg, const char *str) {$/;"	f	typeref:typename:int
tb_print_ex	termbox2.h	/^int tb_print_ex(int x, int y, uintattr_t fg, uintattr_t bg, size_t *out_w,$/;"	f	typeref:typename:int
tb_printf	termbox2.h	/^int tb_printf(int x, int y, uintattr_t fg, uintattr_t bg, const char *fmt,$/;"	f	typeref:typename:int
tb_printf_ex	termbox2.h	/^int tb_printf_ex(int x, int y, uintattr_t fg, uintattr_t bg, size_t *out_w,$/;"	f	typeref:typename:int
tb_printf_inner	termbox2.h	/^int tb_printf_inner(int x, int y, uintattr_t fg, uintattr_t bg, size_t *out_w,$/;"	f	typeref:typename:int
tb_put_cell	termbox2.h	/^#define tb_put_cell(/;"	d
tb_realloc	termbox2.h	/^#define tb_realloc /;"	d
tb_reset	termbox2.h	/^static int tb_reset(void) {$/;"	f	typeref:typename:int
tb_select_input_mode	termbox2.h	/^#define tb_select_input_mode /;"	d
tb_select_output_mode	termbox2.h	/^#define tb_select_output_mode /;"	d
tb_send	termbox2.h	/^int tb_send(const char *buf, size_t nbuf) {$/;"	f	typeref:typename:int
tb_sendf	termbox2.h	/^int tb_sendf(const char *fmt, ...) {$/;"	f	typeref:typename:int
tb_set_cell	termbox2.h	/^int tb_set_cell(int x, int y, uint32_t ch, uintattr_t fg, uintattr_t bg) {$/;"	f	typeref:typename:int
tb_set_cell_ex	termbox2.h	/^int tb_set_cell_ex(int x, int y, uint32_t *ch, size_t nch, uintattr_t fg,$/;"	f	typeref:typename:int
tb_set_clear_attributes	termbox2.h	/^#define tb_set_clear_attributes /;"	d
tb_set_clear_attrs	termbox2.h	/^int tb_set_clear_attrs(uintattr_t fg, uintattr_t bg) {$/;"	f	typeref:typename:int
tb_set_cursor	termbox2.h	/^int tb_set_cursor(int cx, int cy) {$/;"	f	typeref:typename:int
tb_set_func	termbox2.h	/^int tb_set_func(int fn_type, int (*fn)(struct tb_event *, size_t *)) {$/;"	f	typeref:typename:int
tb_set_input_mode	termbox2.h	/^int tb_set_input_mode(int mode) {$/;"	f	typeref:typename:int
tb_set_output_mode	termbox2.h	/^int tb_set_output_mode(int mode) {$/;"	f	typeref:typename:int
tb_shutdown	termbox2.h	/^int tb_shutdown(void) {$/;"	f	typeref:typename:int
tb_strerror	termbox2.h	/^const char *tb_strerror(int err) {$/;"	f	typeref:typename:const char *
tb_utf8_char_length	termbox2.h	/^int tb_utf8_char_length(char c) {$/;"	f	typeref:typename:int
tb_utf8_char_to_unicode	termbox2.h	/^int tb_utf8_char_to_unicode(uint32_t *out, const char *c) {$/;"	f	typeref:typename:int
tb_utf8_unicode_to_char	termbox2.h	/^int tb_utf8_unicode_to_char(char *out, uint32_t c) {$/;"	f	typeref:typename:int
tb_version	termbox2.h	/^const char *tb_version(void) {$/;"	f	typeref:typename:const char *
tb_width	termbox2.h	/^int tb_width(void) {$/;"	f	typeref:typename:int
terminfo	termbox2.h	/^    char *terminfo;$/;"	m	struct:tb_global_t	typeref:typename:char *
terminfo_cap_indexes	termbox2.h	/^static const int16_t terminfo_cap_indexes[] = {$/;"	v	typeref:typename:const int16_t[]
ttyfd	termbox2.h	/^    int ttyfd;$/;"	m	struct:tb_global_t	typeref:typename:int
ttyfd_open	termbox2.h	/^    int ttyfd_open;$/;"	m	struct:tb_global_t	typeref:typename:int
type	termbox2.h	/^    uint8_t type; \/\/ one of `TB_EVENT_*` constants$/;"	m	struct:tb_event	typeref:typename:uint8_t
uintattr_t	termbox2.h	/^typedef uint64_t uintattr_t;$/;"	t	typeref:typename:uint64_t
update_term_size	termbox2.h	/^static int update_term_size(void) {$/;"	f	typeref:typename:int
update_term_size_via_esc	termbox2.h	/^static int update_term_size_via_esc(void) {$/;"	f	typeref:typename:int
utf8_length	termbox2.h	/^static const unsigned char utf8_length[256] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,$/;"	v	typeref:typename:const unsigned char[256]
utf8_mask	termbox2.h	/^static const unsigned char utf8_mask[6] = {0x7f, 0x1f, 0x0f, 0x07, 0x03, 0x01};$/;"	v	typeref:typename:const unsigned char[6]
w	termbox2.h	/^    int32_t w;    \/\/ resize width$/;"	m	struct:tb_event	typeref:typename:int32_t
wait_event	termbox2.h	/^static int wait_event(struct tb_event *event, int timeout) {$/;"	f	typeref:typename:int
wfd	termbox2.h	/^    int wfd;$/;"	m	struct:tb_global_t	typeref:typename:int
width	termbox2.h	/^    int width;$/;"	m	struct:cellbuf_t	typeref:typename:int
width	termbox2.h	/^    int width;$/;"	m	struct:tb_global_t	typeref:typename:int
x	termbox2.h	/^    int32_t x;    \/\/ mouse x$/;"	m	struct:tb_event	typeref:typename:int32_t
xterm_caps	termbox2.h	/^static const char *xterm_caps[] = {$/;"	v	typeref:typename:const char * []
y	termbox2.h	/^    int32_t y;    \/\/ mouse y$/;"	m	struct:tb_event	typeref:typename:int32_t
